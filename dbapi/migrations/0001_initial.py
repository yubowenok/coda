# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-01-04 10:09
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batchID', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('memoryLimitBytes', models.BigIntegerField()),
                ('timeLimitMS', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CheckerType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checkerID', models.CharField(max_length=100, unique=True)),
                ('onlyExecChecker', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='CodaGroup',
            fields=[
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.Group')),
            ],
        ),
        migrations.CreateModel(
            name='CodaUser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('affiliation', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problemID', models.CharField(max_length=100, unique=True)),
                ('checker', models.FileField(blank=True, upload_to=b'')),
                ('title', models.TextField()),
                ('statement', models.TextField()),
                ('pdfStatement', models.FileField(blank=True, upload_to=b'')),
                ('usePDF', models.BooleanField()),
                ('input', models.TextField()),
                ('output', models.TextField()),
                ('checkerType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbapi.CheckerType')),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input', models.TextField()),
                ('output', models.TextField()),
                ('sampleID', models.IntegerField()),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbapi.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='TestFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testFileID', models.IntegerField()),
                ('input', models.FileField(blank=True, upload_to=b'')),
                ('output', models.FileField(blank=True, upload_to=b'')),
                ('resources', models.FileField(blank=True, upload_to=b'')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbapi.Batch')),
            ],
        ),
        migrations.AddField(
            model_name='codagroup',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dbapi.CodaUser'),
        ),
        migrations.AddField(
            model_name='batch',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbapi.Problem'),
        ),
        migrations.AlterUniqueTogether(
            name='testfile',
            unique_together=set([('id', 'batch')]),
        ),
        migrations.AlterUniqueTogether(
            name='sample',
            unique_together=set([('id', 'problem')]),
        ),
        migrations.AlterUniqueTogether(
            name='batch',
            unique_together=set([('id', 'problem')]),
        ),
    ]
